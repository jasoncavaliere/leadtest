@{

	// View
	View = this;
	SetClientVar("login", LoginStatus);

	// Global Page Rendering event
	Page_Rendering();

	// Page Render event
	_Leads_Add.Page_Render();

	// Check action result
	if (_Leads_Add.ActionResult is EmptyResult) { // Terminate page
		return;
	}

	// Layout
	Layout = "_Layout";

	// Local variables (Temp data)
	#pragma warning disable 168
	string sqlWrk, filterWrk, whereWrk, curVal;
	List<Dictionary<string, object>> rswrk;
	string[] arWrk;
	List<object> listWrk;
	Func<string> lookupFilter;
	#pragma warning restore 168
}
<script>
var f_Leadsadd, currentPageID;
loadjs.ready("head", function() {

	// Form object
	currentPageID = ew.PAGE_ID = "add";
	f_Leadsadd = currentForm = new ew.Form("f_Leadsadd", "add");

	// Validate form
	f_Leadsadd.validate = function() {
		if (!this.validateRequired)
			return true; // Ignore validation
		var $ = jQuery, fobj = this.getForm(), $fobj = $(fobj);
		if ($fobj.find("#confirm").val() == "confirm")
			return true;
		var elm, felm, uelm, addcnt = 0;
		var $k = $fobj.find("#" + this.formKeyCountName); // Get key_count
		var rowcnt = ($k[0]) ? parseInt($k.val(), 10) : 1;
		var startcnt = (rowcnt == 0) ? 0 : 1; // Check rowcnt == 0 => Inline-Add
		var gridinsert = ["insert", "gridinsert"].includes($fobj.find("#action").val()) && $k[0];
		for (var i = startcnt; i <= rowcnt; i++) {
			var infix = ($k[0]) ? String(i) : "";
			$fobj.data("rowindex", infix);
			@if (_Leads_Add.LeadId.Required) {
				<text>
				elm = this.getElements("x" + infix + "_LeadId");
				if (elm && !ew.isHidden(elm) && !ew.hasValue(elm))
					return this.onError(elm, "@Html.Raw(JsEncode(Convert.ToString(_Leads_Add.LeadId.RequiredErrorMessage).Replace("%s", _Leads_Add.LeadId.Caption)))");
				</text>
			}
				elm = this.getElements("x" + infix + "_LeadId");
				if (elm && !ew.checkGuid(elm.value))
					return this.onError(elm, "@(JsEncode(_Leads_Add.LeadId.ErrorMessage))");
			@if (_Leads_Add._Name.Required) {
				<text>
				elm = this.getElements("x" + infix + "__Name");
				if (elm && !ew.isHidden(elm) && !ew.hasValue(elm))
					return this.onError(elm, "@Html.Raw(JsEncode(Convert.ToString(_Leads_Add._Name.RequiredErrorMessage).Replace("%s", _Leads_Add._Name.Caption)))");
				</text>
			}
			@if (_Leads_Add.State.Required) {
				<text>
				elm = this.getElements("x" + infix + "_State");
				if (elm && !ew.isHidden(elm) && !ew.hasValue(elm))
					return this.onError(elm, "@Html.Raw(JsEncode(Convert.ToString(_Leads_Add.State.RequiredErrorMessage).Replace("%s", _Leads_Add.State.Caption)))");
				</text>
			}
			@if (_Leads_Add.LeadStatusId.Required) {
				<text>
				elm = this.getElements("x" + infix + "_LeadStatusId");
				if (elm && !ew.isHidden(elm) && !ew.hasValue(elm))
					return this.onError(elm, "@Html.Raw(JsEncode(Convert.ToString(_Leads_Add.LeadStatusId.RequiredErrorMessage).Replace("%s", _Leads_Add.LeadStatusId.Caption)))");
				</text>
			}
			@if (_Leads_Add.BranchId.Required) {
				<text>
				elm = this.getElements("x" + infix + "_BranchId");
				if (elm && !ew.isHidden(elm) && !ew.hasValue(elm))
					return this.onError(elm, "@Html.Raw(JsEncode(Convert.ToString(_Leads_Add.BranchId.RequiredErrorMessage).Replace("%s", _Leads_Add.BranchId.Caption)))");
				</text>
			}
			@if (_Leads_Add.UserId.Required) {
				<text>
				elm = this.getElements("x" + infix + "_UserId");
				if (elm && !ew.isHidden(elm) && !ew.hasValue(elm))
					return this.onError(elm, "@Html.Raw(JsEncode(Convert.ToString(_Leads_Add.UserId.RequiredErrorMessage).Replace("%s", _Leads_Add.UserId.Caption)))");
				</text>
			}
				elm = this.getElements("x" + infix + "_UserId");
				if (elm && !ew.checkGuid(elm.value))
					return this.onError(elm, "@(JsEncode(_Leads_Add.UserId.ErrorMessage))");
			@if (_Leads_Add.FirstName.Required) {
				<text>
				elm = this.getElements("x" + infix + "_FirstName");
				if (elm && !ew.isHidden(elm) && !ew.hasValue(elm))
					return this.onError(elm, "@Html.Raw(JsEncode(Convert.ToString(_Leads_Add.FirstName.RequiredErrorMessage).Replace("%s", _Leads_Add.FirstName.Caption)))");
				</text>
			}
			@if (_Leads_Add.LastName.Required) {
				<text>
				elm = this.getElements("x" + infix + "_LastName");
				if (elm && !ew.isHidden(elm) && !ew.hasValue(elm))
					return this.onError(elm, "@Html.Raw(JsEncode(Convert.ToString(_Leads_Add.LastName.RequiredErrorMessage).Replace("%s", _Leads_Add.LastName.Caption)))");
				</text>
			}
			@if (_Leads_Add.BlobUrl.Required) {
				<text>
				elm = this.getElements("x" + infix + "_BlobUrl");
				if (elm && !ew.isHidden(elm) && !ew.hasValue(elm))
					return this.onError(elm, "@Html.Raw(JsEncode(Convert.ToString(_Leads_Add.BlobUrl.RequiredErrorMessage).Replace("%s", _Leads_Add.BlobUrl.Caption)))");
				</text>
			}
			@if (_Leads_Add.EmailAddress.Required) {
				<text>
				elm = this.getElements("x" + infix + "_EmailAddress");
				if (elm && !ew.isHidden(elm) && !ew.hasValue(elm))
					return this.onError(elm, "@Html.Raw(JsEncode(Convert.ToString(_Leads_Add.EmailAddress.RequiredErrorMessage).Replace("%s", _Leads_Add.EmailAddress.Caption)))");
				</text>
			}
			@if (_Leads_Add.PhoneNumber.Required) {
				<text>
				elm = this.getElements("x" + infix + "_PhoneNumber");
				if (elm && !ew.isHidden(elm) && !ew.hasValue(elm))
					return this.onError(elm, "@Html.Raw(JsEncode(Convert.ToString(_Leads_Add.PhoneNumber.RequiredErrorMessage).Replace("%s", _Leads_Add.PhoneNumber.Caption)))");
				</text>
			}

				// Call Form_CustomValidate event
				if (!this.Form_CustomValidate(fobj))
					return false;
		}

		// Process detail forms
		var dfs = $fobj.find("input[name='detailpage']").get();
		for (var i = 0; i < dfs.length; i++) {
			var df = dfs[i], val = df.value;
			if (val && ew.forms[val])
				if (!ew.forms[val].validate())
					return false;
		}
		return true;
	}

	// Form_CustomValidate
	f_Leadsadd.Form_CustomValidate = function(fobj) { // DO NOT CHANGE THIS LINE!

		// Your custom validation code here, return false if invalid.
		return true;
	}

	// Use JavaScript validation or not
	f_Leadsadd.validateRequired = @(Config.ClientValidate ? "true" : "false");

	// Dynamic selection lists
	f_Leadsadd.lists["x_LeadStatusId"] = @Html.Raw(_Leads_Add.LeadStatusId.Lookup.ToClientList(_Leads_Add));
	f_Leadsadd.lists["x_LeadStatusId"].options = @Html.Raw(ConvertToJson(_Leads_Add.LeadStatusId.LookupOptions));
	f_Leadsadd.lists["x_BranchId"] = @Html.Raw(_Leads_Add.BranchId.Lookup.ToClientList(_Leads_Add));
	f_Leadsadd.lists["x_BranchId"].options = @Html.Raw(ConvertToJson(_Leads_Add.BranchId.LookupOptions));
	loadjs.done("f_Leadsadd");
});
</script>
<script>
loadjs.ready("head", function() {

	// Client script
	// Write your client script here, no need to add script tags.

});
</script>
@_Leads_Add.ShowPageHeader()
@_Leads_Add.ShowMessages()
<form name="f_Leadsadd" id="f_Leadsadd" class="@(_Leads_Add.FormClassName)" action="@AppPath(CurrentPageName())" method="post">
@if (_Leads_Add.CheckToken) {
	@Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="insert">
<input type="hidden" name="modal" value="@ConvertToInt(_Leads_Add.IsModal)">
<div class="ew-add-div"><!-- page* -->
@if (_Leads_Add.LeadId.Visible) { // _Leads_Add.LeadId.Visible (begin)
	<div id="r_LeadId" class="form-group row">
		<label id="elh__Leads_LeadId" for="x_LeadId" class="@(_Leads_Add.LeftColumnClass)">@Html.Raw(_Leads_Add.LeadId.Caption)@Html.Raw(_Leads_Add.LeadId.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
		<div class="@(_Leads_Add.RightColumnClass)"><div @Html.Raw(_Leads_Add.LeadId.CellAttributes)>
<span id="el__Leads_LeadId">
<input type="text" data-table="_Leads" data-field="x_LeadId" name="x_LeadId" id="x_LeadId" size="38" maxlength="38" placeholder="@Html.Raw(HtmlEncode(_Leads_Add.LeadId.PlaceHolder))" value="@(_Leads_Add.LeadId.EditValue)" @Html.Raw(_Leads_Add.LeadId.EditAttributes)>
</span>
@Html.Raw(_Leads_Add.LeadId.CustomMsg)</div></div>
	</div>
} @* _Leads_Add.LeadId.Visible (end) *@
@if (_Leads_Add._Name.Visible) { // _Leads_Add._Name.Visible (begin)
	<div id="r__Name" class="form-group row">
		<label id="elh__Leads__Name" for="x__Name" class="@(_Leads_Add.LeftColumnClass)">@Html.Raw(_Leads_Add._Name.Caption)@Html.Raw(_Leads_Add._Name.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
		<div class="@(_Leads_Add.RightColumnClass)"><div @Html.Raw(_Leads_Add._Name.CellAttributes)>
<span id="el__Leads__Name">
<input type="text" data-table="_Leads" data-field="x__Name" name="x__Name" id="x__Name" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(_Leads_Add._Name.PlaceHolder))" value="@(_Leads_Add._Name.EditValue)" @Html.Raw(_Leads_Add._Name.EditAttributes)>
</span>
@Html.Raw(_Leads_Add._Name.CustomMsg)</div></div>
	</div>
} @* _Leads_Add._Name.Visible (end) *@
@if (_Leads_Add.State.Visible) { // _Leads_Add.State.Visible (begin)
	<div id="r_State" class="form-group row">
		<label id="elh__Leads_State" for="x_State" class="@(_Leads_Add.LeftColumnClass)">@Html.Raw(_Leads_Add.State.Caption)@Html.Raw(_Leads_Add.State.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
		<div class="@(_Leads_Add.RightColumnClass)"><div @Html.Raw(_Leads_Add.State.CellAttributes)>
<span id="el__Leads_State">
<input type="text" data-table="_Leads" data-field="x_State" name="x_State" id="x_State" size="30" maxlength="100" placeholder="@Html.Raw(HtmlEncode(_Leads_Add.State.PlaceHolder))" value="@(_Leads_Add.State.EditValue)" @Html.Raw(_Leads_Add.State.EditAttributes)>
</span>
@Html.Raw(_Leads_Add.State.CustomMsg)</div></div>
	</div>
} @* _Leads_Add.State.Visible (end) *@
@if (_Leads_Add.LeadStatusId.Visible) { // _Leads_Add.LeadStatusId.Visible (begin)
	<div id="r_LeadStatusId" class="form-group row">
		<label id="elh__Leads_LeadStatusId" for="x_LeadStatusId" class="@(_Leads_Add.LeftColumnClass)">@Html.Raw(_Leads_Add.LeadStatusId.Caption)@Html.Raw(_Leads_Add.LeadStatusId.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
		<div class="@(_Leads_Add.RightColumnClass)"><div @Html.Raw(_Leads_Add.LeadStatusId.CellAttributes)>
<span id="el__Leads_LeadStatusId">
<div class="input-group">
	<select class="custom-select ew-custom-select" data-table="_Leads" data-field="x_LeadStatusId" data-value-separator="@(_Leads_Add.LeadStatusId.DisplayValueSeparatorAttribute)" id="x_LeadStatusId" name="x_LeadStatusId" @Html.Raw(_Leads_Add.LeadStatusId.EditAttributes)>
			@(_Leads_Add.LeadStatusId.SelectOptionListHtml("x_LeadStatusId"))
		</select>
</div>
@Html.Raw(_Leads_Add.LeadStatusId.Lookup.GetParamTag(_Leads_Add, "p_x_LeadStatusId"))
</span>
@Html.Raw(_Leads_Add.LeadStatusId.CustomMsg)</div></div>
	</div>
} @* _Leads_Add.LeadStatusId.Visible (end) *@
@if (_Leads_Add.BranchId.Visible) { // _Leads_Add.BranchId.Visible (begin)
	<div id="r_BranchId" class="form-group row">
		<label id="elh__Leads_BranchId" for="x_BranchId" class="@(_Leads_Add.LeftColumnClass)">@Html.Raw(_Leads_Add.BranchId.Caption)@Html.Raw(_Leads_Add.BranchId.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
		<div class="@(_Leads_Add.RightColumnClass)"><div @Html.Raw(_Leads_Add.BranchId.CellAttributes)>
<span id="el__Leads_BranchId">
<div class="input-group">
	<select class="custom-select ew-custom-select" data-table="_Leads" data-field="x_BranchId" data-value-separator="@(_Leads_Add.BranchId.DisplayValueSeparatorAttribute)" id="x_BranchId" name="x_BranchId" @Html.Raw(_Leads_Add.BranchId.EditAttributes)>
			@(_Leads_Add.BranchId.SelectOptionListHtml("x_BranchId"))
		</select>
</div>
@Html.Raw(_Leads_Add.BranchId.Lookup.GetParamTag(_Leads_Add, "p_x_BranchId"))
</span>
@Html.Raw(_Leads_Add.BranchId.CustomMsg)</div></div>
	</div>
} @* _Leads_Add.BranchId.Visible (end) *@
@if (_Leads_Add.UserId.Visible) { // _Leads_Add.UserId.Visible (begin)
	<div id="r_UserId" class="form-group row">
		<label id="elh__Leads_UserId" for="x_UserId" class="@(_Leads_Add.LeftColumnClass)">@Html.Raw(_Leads_Add.UserId.Caption)@Html.Raw(_Leads_Add.UserId.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
		<div class="@(_Leads_Add.RightColumnClass)"><div @Html.Raw(_Leads_Add.UserId.CellAttributes)>
<span id="el__Leads_UserId">
<input type="text" data-table="_Leads" data-field="x_UserId" name="x_UserId" id="x_UserId" size="38" maxlength="38" placeholder="@Html.Raw(HtmlEncode(_Leads_Add.UserId.PlaceHolder))" value="@(_Leads_Add.UserId.EditValue)" @Html.Raw(_Leads_Add.UserId.EditAttributes)>
</span>
@Html.Raw(_Leads_Add.UserId.CustomMsg)</div></div>
	</div>
} @* _Leads_Add.UserId.Visible (end) *@
@if (_Leads_Add.FirstName.Visible) { // _Leads_Add.FirstName.Visible (begin)
	<div id="r_FirstName" class="form-group row">
		<label id="elh__Leads_FirstName" for="x_FirstName" class="@(_Leads_Add.LeftColumnClass)">@Html.Raw(_Leads_Add.FirstName.Caption)@Html.Raw(_Leads_Add.FirstName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
		<div class="@(_Leads_Add.RightColumnClass)"><div @Html.Raw(_Leads_Add.FirstName.CellAttributes)>
<span id="el__Leads_FirstName">
<input type="text" data-table="_Leads" data-field="x_FirstName" name="x_FirstName" id="x_FirstName" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(_Leads_Add.FirstName.PlaceHolder))" value="@(_Leads_Add.FirstName.EditValue)" @Html.Raw(_Leads_Add.FirstName.EditAttributes)>
</span>
@Html.Raw(_Leads_Add.FirstName.CustomMsg)</div></div>
	</div>
} @* _Leads_Add.FirstName.Visible (end) *@
@if (_Leads_Add.LastName.Visible) { // _Leads_Add.LastName.Visible (begin)
	<div id="r_LastName" class="form-group row">
		<label id="elh__Leads_LastName" for="x_LastName" class="@(_Leads_Add.LeftColumnClass)">@Html.Raw(_Leads_Add.LastName.Caption)@Html.Raw(_Leads_Add.LastName.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
		<div class="@(_Leads_Add.RightColumnClass)"><div @Html.Raw(_Leads_Add.LastName.CellAttributes)>
<span id="el__Leads_LastName">
<input type="text" data-table="_Leads" data-field="x_LastName" name="x_LastName" id="x_LastName" size="30" maxlength="10" placeholder="@Html.Raw(HtmlEncode(_Leads_Add.LastName.PlaceHolder))" value="@(_Leads_Add.LastName.EditValue)" @Html.Raw(_Leads_Add.LastName.EditAttributes)>
</span>
@Html.Raw(_Leads_Add.LastName.CustomMsg)</div></div>
	</div>
} @* _Leads_Add.LastName.Visible (end) *@
@if (_Leads_Add.BlobUrl.Visible) { // _Leads_Add.BlobUrl.Visible (begin)
	<div id="r_BlobUrl" class="form-group row">
		<label id="elh__Leads_BlobUrl" for="x_BlobUrl" class="@(_Leads_Add.LeftColumnClass)">@Html.Raw(_Leads_Add.BlobUrl.Caption)@Html.Raw(_Leads_Add.BlobUrl.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
		<div class="@(_Leads_Add.RightColumnClass)"><div @Html.Raw(_Leads_Add.BlobUrl.CellAttributes)>
<span id="el__Leads_BlobUrl">
<input type="text" data-table="_Leads" data-field="x_BlobUrl" name="x_BlobUrl" id="x_BlobUrl" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(_Leads_Add.BlobUrl.PlaceHolder))" value="@(_Leads_Add.BlobUrl.EditValue)" @Html.Raw(_Leads_Add.BlobUrl.EditAttributes)>
</span>
@Html.Raw(_Leads_Add.BlobUrl.CustomMsg)</div></div>
	</div>
} @* _Leads_Add.BlobUrl.Visible (end) *@
@if (_Leads_Add.EmailAddress.Visible) { // _Leads_Add.EmailAddress.Visible (begin)
	<div id="r_EmailAddress" class="form-group row">
		<label id="elh__Leads_EmailAddress" for="x_EmailAddress" class="@(_Leads_Add.LeftColumnClass)">@Html.Raw(_Leads_Add.EmailAddress.Caption)@Html.Raw(_Leads_Add.EmailAddress.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
		<div class="@(_Leads_Add.RightColumnClass)"><div @Html.Raw(_Leads_Add.EmailAddress.CellAttributes)>
<span id="el__Leads_EmailAddress">
<input type="text" data-table="_Leads" data-field="x_EmailAddress" name="x_EmailAddress" id="x_EmailAddress" size="30" maxlength="50" placeholder="@Html.Raw(HtmlEncode(_Leads_Add.EmailAddress.PlaceHolder))" value="@(_Leads_Add.EmailAddress.EditValue)" @Html.Raw(_Leads_Add.EmailAddress.EditAttributes)>
</span>
@Html.Raw(_Leads_Add.EmailAddress.CustomMsg)</div></div>
	</div>
} @* _Leads_Add.EmailAddress.Visible (end) *@
@if (_Leads_Add.PhoneNumber.Visible) { // _Leads_Add.PhoneNumber.Visible (begin)
	<div id="r_PhoneNumber" class="form-group row">
		<label id="elh__Leads_PhoneNumber" for="x_PhoneNumber" class="@(_Leads_Add.LeftColumnClass)">@Html.Raw(_Leads_Add.PhoneNumber.Caption)@Html.Raw(_Leads_Add.PhoneNumber.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
		<div class="@(_Leads_Add.RightColumnClass)"><div @Html.Raw(_Leads_Add.PhoneNumber.CellAttributes)>
<span id="el__Leads_PhoneNumber">
<input type="text" data-table="_Leads" data-field="x_PhoneNumber" name="x_PhoneNumber" id="x_PhoneNumber" size="30" maxlength="10" placeholder="@Html.Raw(HtmlEncode(_Leads_Add.PhoneNumber.PlaceHolder))" value="@(_Leads_Add.PhoneNumber.EditValue)" @Html.Raw(_Leads_Add.PhoneNumber.EditAttributes)>
</span>
@Html.Raw(_Leads_Add.PhoneNumber.CustomMsg)</div></div>
	</div>
} @* _Leads_Add.PhoneNumber.Visible (end) *@
</div><!-- /page* -->
@{ _Leads_Add.CloseRecordset(); }
@if (!_Leads_Add.IsModal) {
@:<div class="form-group row"><!-- buttons .form-group -->
	@:<div class="@(_Leads_Add.OffsetColumnClass)"><!-- buttons offset -->
<button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit">@Html.Raw(Language.Phrase("AddBtn"))</button>
<button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-href="@AppPath(_Leads_Add.ReturnUrl)"> @Html.Raw(Language.Phrase("CancelBtn"))</button>
	@:</div><!-- /buttons offset -->
@:</div><!-- /buttons .form-group -->
}
</form>
@_Leads_Add.ShowPageFooter()
@ShowDebugMessage()
@ElapsedTime()
<script>
loadjs.ready("load", function() {

	// Startup script
	// Write your table-specific startup script here
	// document.write("page loaded");

});
</script>