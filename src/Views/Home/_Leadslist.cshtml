@{

	// View
	View = this;
	SetClientVar("login", LoginStatus);

	// Global Page Rendering event
	Page_Rendering();

	// Page Render event
	_Leads_List.Page_Render();

	// Check action result
	if (_Leads_List.ActionResult is EmptyResult) { // Terminate page
		return;
	}

	// Layout
	Layout = "_Layout";

	// Local variables (Temp data)
	#pragma warning disable 168
	string sqlWrk, filterWrk, whereWrk, curVal;
	List<Dictionary<string, object>> rswrk;
	string[] arWrk;
	List<object> listWrk;
	Func<string> lookupFilter;
	#pragma warning restore 168
}
@if (!_Leads_List.IsExport()) {
<script>
var f_Leadslist, currentPageID;
loadjs.ready("head", function() {

	// Form object
	currentPageID = ew.PAGE_ID = "list";
	f_Leadslist = currentForm = new ew.Form("f_Leadslist", "list");
	f_Leadslist.formKeyCountName = '@(_Leads_List.FormKeyCountName)';
	loadjs.done("f_Leadslist");
});
var f_Leadslistsrch;
loadjs.ready("head", function() {

	// Form object for search
	f_Leadslistsrch = currentSearchForm = new ew.Form("f_Leadslistsrch");

	// Dynamic selection lists
	// Filters

	f_Leadslistsrch.filterList = @Html.Raw(await _Leads_List.GetFilterList());
	loadjs.done("f_Leadslistsrch");
});
</script>
<script>
loadjs.ready("head", function() {

	// Client script
	// Write your client script here, no need to add script tags.

});
</script>
}
@if (!_Leads_List.IsExport()) {
<div class="btn-toolbar ew-toolbar">
@if (_Leads_List.TotalRecords > 0 && _Leads_List.ExportOptions.Visible) {
	_Leads_List.ExportOptions.Render("body");
}
@if (_Leads_List.ImportOptions.Visible) {
	_Leads_List.ImportOptions.Render("body");
}
@if (_Leads_List.SearchOptions.Visible) {
	_Leads_List.SearchOptions.Render("body");
}
@if (_Leads_List.FilterOptions.Visible) {
	_Leads_List.FilterOptions.Render("body");
}
<div class="clearfix"></div>
</div>
}
@{ _Leads_List.RenderOtherOptions(); }
@_Leads_List.ShowPageHeader()
@_Leads_List.ShowMessages()
@if (_Leads_List.TotalRecords > 0 || !Empty(_Leads.CurrentAction)) {
<div class="card ew-card ew-grid@(_Leads_List.IsAddOrEdit ? " ew-grid-add-edit" : "") _Leads">
<form name="f_Leadslist" id="f_Leadslist" class="form-inline ew-form ew-list-form" action="@AppPath(CurrentPageName())" method="post">
@if (_Leads_List.CheckToken) {
	@Html.AntiForgeryToken()
}
<div id="gmp__Leads" class="@ResponsiveTableClass() card-body ew-grid-middle-panel">
@if (_Leads_List.TotalRecords > 0 || _Leads_List.IsGridEdit) {
<table id="tbl__Leadslist" class="table ew-table"><!-- .ew-table -->
<thead>
	<tr class="ew-table-header">
@{

	// Header row
	_Leads.RowType = Config.RowTypeHeader;

	// Render list options
	await _Leads_List.RenderListOptions();

	// Render list options (header, left)
	_Leads_List.ListOptions.Render("header", "left");
}
@if (_Leads_List._Name.Visible) { // _Leads_List._Name.Visible (begin)
	if (_Leads_List.SortUrl(_Leads_List._Name) == "") {
		<th data-name="_Name" class="@(_Leads_List._Name.HeaderCellClass)"><div id="elh__Leads__Name" class="_Leads__Name"><div class="ew-table-header-caption">@Html.Raw(_Leads_List._Name.Caption)</div></div></th>
	} else {
		<th data-name="_Name" class="@(_Leads_List._Name.HeaderCellClass)"><div class="ew-pointer" onclick="ew.sort(event, '@Html.Raw(_Leads_List.SortUrl(_Leads_List._Name))', 1);"><div id="elh__Leads__Name" class="_Leads__Name">
			<div class="ew-table-header-btn"><span class="ew-table-header-caption">@Html.Raw(_Leads_List._Name.Caption)</span><span class="ew-table-header-sort">@if (_Leads_List._Name.Sort == "ASC") {<i class="fas fa-sort-up"></i>} else if (_Leads_List._Name.Sort == "DESC") {<i class="fas fa-sort-down"></i>}</span></div>
		</div></div></th>
	}
} @* _Leads_List._Name.Visible (end) *@
@if (_Leads_List.LeadStatusId.Visible) { // _Leads_List.LeadStatusId.Visible (begin)
	if (_Leads_List.SortUrl(_Leads_List.LeadStatusId) == "") {
		<th data-name="LeadStatusId" class="@(_Leads_List.LeadStatusId.HeaderCellClass)"><div id="elh__Leads_LeadStatusId" class="_Leads_LeadStatusId"><div class="ew-table-header-caption">@Html.Raw(_Leads_List.LeadStatusId.Caption)</div></div></th>
	} else {
		<th data-name="LeadStatusId" class="@(_Leads_List.LeadStatusId.HeaderCellClass)"><div class="ew-pointer" onclick="ew.sort(event, '@Html.Raw(_Leads_List.SortUrl(_Leads_List.LeadStatusId))', 1);"><div id="elh__Leads_LeadStatusId" class="_Leads_LeadStatusId">
			<div class="ew-table-header-btn"><span class="ew-table-header-caption">@Html.Raw(_Leads_List.LeadStatusId.Caption)</span><span class="ew-table-header-sort">@if (_Leads_List.LeadStatusId.Sort == "ASC") {<i class="fas fa-sort-up"></i>} else if (_Leads_List.LeadStatusId.Sort == "DESC") {<i class="fas fa-sort-down"></i>}</span></div>
		</div></div></th>
	}
} @* _Leads_List.LeadStatusId.Visible (end) *@
@if (_Leads_List.BranchId.Visible) { // _Leads_List.BranchId.Visible (begin)
	if (_Leads_List.SortUrl(_Leads_List.BranchId) == "") {
		<th data-name="BranchId" class="@(_Leads_List.BranchId.HeaderCellClass)"><div id="elh__Leads_BranchId" class="_Leads_BranchId"><div class="ew-table-header-caption">@Html.Raw(_Leads_List.BranchId.Caption)</div></div></th>
	} else {
		<th data-name="BranchId" class="@(_Leads_List.BranchId.HeaderCellClass)"><div class="ew-pointer" onclick="ew.sort(event, '@Html.Raw(_Leads_List.SortUrl(_Leads_List.BranchId))', 1);"><div id="elh__Leads_BranchId" class="_Leads_BranchId">
			<div class="ew-table-header-btn"><span class="ew-table-header-caption">@Html.Raw(_Leads_List.BranchId.Caption)</span><span class="ew-table-header-sort">@if (_Leads_List.BranchId.Sort == "ASC") {<i class="fas fa-sort-up"></i>} else if (_Leads_List.BranchId.Sort == "DESC") {<i class="fas fa-sort-down"></i>}</span></div>
		</div></div></th>
	}
} @* _Leads_List.BranchId.Visible (end) *@
@if (_Leads_List.UserId.Visible) { // _Leads_List.UserId.Visible (begin)
	if (_Leads_List.SortUrl(_Leads_List.UserId) == "") {
		<th data-name="UserId" class="@(_Leads_List.UserId.HeaderCellClass)"><div id="elh__Leads_UserId" class="_Leads_UserId"><div class="ew-table-header-caption">@Html.Raw(_Leads_List.UserId.Caption)</div></div></th>
	} else {
		<th data-name="UserId" class="@(_Leads_List.UserId.HeaderCellClass)"><div class="ew-pointer" onclick="ew.sort(event, '@Html.Raw(_Leads_List.SortUrl(_Leads_List.UserId))', 1);"><div id="elh__Leads_UserId" class="_Leads_UserId">
			<div class="ew-table-header-btn"><span class="ew-table-header-caption">@Html.Raw(_Leads_List.UserId.Caption)</span><span class="ew-table-header-sort">@if (_Leads_List.UserId.Sort == "ASC") {<i class="fas fa-sort-up"></i>} else if (_Leads_List.UserId.Sort == "DESC") {<i class="fas fa-sort-down"></i>}</span></div>
		</div></div></th>
	}
} @* _Leads_List.UserId.Visible (end) *@
@if (_Leads_List.EmailAddress.Visible) { // _Leads_List.EmailAddress.Visible (begin)
	if (_Leads_List.SortUrl(_Leads_List.EmailAddress) == "") {
		<th data-name="EmailAddress" class="@(_Leads_List.EmailAddress.HeaderCellClass)"><div id="elh__Leads_EmailAddress" class="_Leads_EmailAddress"><div class="ew-table-header-caption">@Html.Raw(_Leads_List.EmailAddress.Caption)</div></div></th>
	} else {
		<th data-name="EmailAddress" class="@(_Leads_List.EmailAddress.HeaderCellClass)"><div class="ew-pointer" onclick="ew.sort(event, '@Html.Raw(_Leads_List.SortUrl(_Leads_List.EmailAddress))', 1);"><div id="elh__Leads_EmailAddress" class="_Leads_EmailAddress">
			<div class="ew-table-header-btn"><span class="ew-table-header-caption">@Html.Raw(_Leads_List.EmailAddress.Caption)</span><span class="ew-table-header-sort">@if (_Leads_List.EmailAddress.Sort == "ASC") {<i class="fas fa-sort-up"></i>} else if (_Leads_List.EmailAddress.Sort == "DESC") {<i class="fas fa-sort-down"></i>}</span></div>
		</div></div></th>
	}
} @* _Leads_List.EmailAddress.Visible (end) *@
@if (_Leads_List.PhoneNumber.Visible) { // _Leads_List.PhoneNumber.Visible (begin)
	if (_Leads_List.SortUrl(_Leads_List.PhoneNumber) == "") {
		<th data-name="PhoneNumber" class="@(_Leads_List.PhoneNumber.HeaderCellClass)"><div id="elh__Leads_PhoneNumber" class="_Leads_PhoneNumber"><div class="ew-table-header-caption">@Html.Raw(_Leads_List.PhoneNumber.Caption)</div></div></th>
	} else {
		<th data-name="PhoneNumber" class="@(_Leads_List.PhoneNumber.HeaderCellClass)"><div class="ew-pointer" onclick="ew.sort(event, '@Html.Raw(_Leads_List.SortUrl(_Leads_List.PhoneNumber))', 1);"><div id="elh__Leads_PhoneNumber" class="_Leads_PhoneNumber">
			<div class="ew-table-header-btn"><span class="ew-table-header-caption">@Html.Raw(_Leads_List.PhoneNumber.Caption)</span><span class="ew-table-header-sort">@if (_Leads_List.PhoneNumber.Sort == "ASC") {<i class="fas fa-sort-up"></i>} else if (_Leads_List.PhoneNumber.Sort == "DESC") {<i class="fas fa-sort-down"></i>}</span></div>
		</div></div></th>
	}
} @* _Leads_List.PhoneNumber.Visible (end) *@
@{

	// Render list options (header, right)
	_Leads_List.ListOptions.Render("header", "right");
}
	</tr>
</thead>
<tbody>
@{ // Begin Code
if (_Leads_List.ExportAll && _Leads_List.IsExport()) {
	_Leads_List.StopRecord = _Leads_List.TotalRecords;
} else {

	// Set the last record to display
	if (_Leads_List.TotalRecords > _Leads_List.StartRecord + _Leads_List.DisplayRecords - 1) {
		_Leads_List.StopRecord = _Leads_List.StartRecord + _Leads_List.DisplayRecords - 1;
	} else {
		_Leads_List.StopRecord = _Leads_List.TotalRecords;
	}
}
if (_Leads_List.Recordset != null && _Leads_List.Recordset.HasRows) {
	if (!_Leads_List.Connection.SelectOffset) { // DN
		for (int i = 1; i <= _Leads_List.StartRecord - 1; i++) { // Move to first record
			if (await _Leads_List.Recordset.ReadAsync()) {
				_Leads_List.RecordCount++;
			}
		}
	} else {
		_Leads_List.RecordCount = _Leads_List.StartRecord - 1;
	}
} else if (!_Leads_List.AllowAddDeleteRow && _Leads_List.StopRecord == 0) {
	_Leads_List.StopRecord = _Leads_List.GridAddRowCount;
}

// Initialize aggregate
_Leads.RowType = Config.RowTypeAggregateInit;
_Leads_List.ResetAttributes();
await _Leads_List.RenderRow();

// Output data rows
bool eof = (_Leads_List.Recordset == null); // DN
while (_Leads_List.RecordCount < _Leads_List.StopRecord) { // Begin While
	if (!_Leads_List.IsGridAdd && !eof) { // DN
		eof = !await _Leads_List.Recordset.ReadAsync();
	}
	_Leads_List.RecordCount++;
	if (_Leads_List.RecordCount >= _Leads_List.StartRecord) {
		_Leads_List.RowCount++;

		// Set up key count
		_Leads_List.KeyCount = ConvertToInt(_Leads_List.RowIndex);

		// Init row class and style
		_Leads_List.ResetAttributes();
		_Leads_List.CssClass = "";
		if (_Leads_List.IsGridAdd) {
		} else {
			await _Leads_List.LoadRowValues(_Leads_List.Recordset); // Load row values
		}
		_Leads.RowType = Config.RowTypeView; // Render view

		// Set up row id / data-rowindex
		_Leads_List.RowAttrs.Add("data-rowindex", Convert.ToString(_Leads_List.RowCount));
		_Leads_List.RowAttrs.Add("id", "r" + Convert.ToString(_Leads_List.RowCount) + "__Leads");
		_Leads_List.RowAttrs.Add("data-rowtype", Convert.ToString(_Leads_List.RowType));

		// Render row
		await _Leads_List.RenderRow();

		// Render list options
		await _Leads_List.RenderListOptions();
	@:<tr @Html.Raw(_Leads.RowAttributes)>
	@* Render list options (body, left) *@
	@_Leads_List.ListOptions.RenderBody("left", _Leads_List.RowCount)
	if (_Leads_List._Name.Visible) { // _Leads_List._Name.Visible (begin)
		<td data-name="_Name" @Html.Raw(_Leads_List._Name.CellAttributes)>
<span id="el@(_Leads_List.RowCount)__Leads__Name">
<span @Html.Raw(_Leads_List._Name.ViewAttributes)>@Html.Raw(_Leads_List._Name.GetViewValue())</span>
</span>
</td>
	} @* _Leads_List._Name.Visible (end) *@
	if (_Leads_List.LeadStatusId.Visible) { // _Leads_List.LeadStatusId.Visible (begin)
		<td data-name="LeadStatusId" @Html.Raw(_Leads_List.LeadStatusId.CellAttributes)>
<span id="el@(_Leads_List.RowCount)__Leads_LeadStatusId">
<span @Html.Raw(_Leads_List.LeadStatusId.ViewAttributes)>@Html.Raw(_Leads_List.LeadStatusId.GetViewValue())</span>
</span>
</td>
	} @* _Leads_List.LeadStatusId.Visible (end) *@
	if (_Leads_List.BranchId.Visible) { // _Leads_List.BranchId.Visible (begin)
		<td data-name="BranchId" @Html.Raw(_Leads_List.BranchId.CellAttributes)>
<span id="el@(_Leads_List.RowCount)__Leads_BranchId">
<span @Html.Raw(_Leads_List.BranchId.ViewAttributes)>@Html.Raw(_Leads_List.BranchId.GetViewValue())</span>
</span>
</td>
	} @* _Leads_List.BranchId.Visible (end) *@
	if (_Leads_List.UserId.Visible) { // _Leads_List.UserId.Visible (begin)
		<td data-name="UserId" @Html.Raw(_Leads_List.UserId.CellAttributes)>
<span id="el@(_Leads_List.RowCount)__Leads_UserId">
<span @Html.Raw(_Leads_List.UserId.ViewAttributes)>@Html.Raw(_Leads_List.UserId.GetViewValue())</span>
</span>
</td>
	} @* _Leads_List.UserId.Visible (end) *@
	if (_Leads_List.EmailAddress.Visible) { // _Leads_List.EmailAddress.Visible (begin)
		<td data-name="EmailAddress" @Html.Raw(_Leads_List.EmailAddress.CellAttributes)>
<span id="el@(_Leads_List.RowCount)__Leads_EmailAddress">
<span @Html.Raw(_Leads_List.EmailAddress.ViewAttributes)>@Html.Raw(_Leads_List.EmailAddress.GetViewValue())</span>
</span>
</td>
	} @* _Leads_List.EmailAddress.Visible (end) *@
	if (_Leads_List.PhoneNumber.Visible) { // _Leads_List.PhoneNumber.Visible (begin)
		<td data-name="PhoneNumber" @Html.Raw(_Leads_List.PhoneNumber.CellAttributes)>
<span id="el@(_Leads_List.RowCount)__Leads_PhoneNumber">
<span @Html.Raw(_Leads_List.PhoneNumber.ViewAttributes)>@Html.Raw(_Leads_List.PhoneNumber.GetViewValue())</span>
</span>
</td>
	} @* _Leads_List.PhoneNumber.Visible (end) *@
	@* Render list options (body, right) *@
	@_Leads_List.ListOptions.RenderBody("right", _Leads_List.RowCount)
	@:</tr>
	} @* End if *@
} @* End While *@
} @* End Code *@
</tbody>
</table><!-- /.ew-table -->
} @* End If TotalRecords > 0 *@
</div><!-- /.ew-grid-middle-panel -->
@if (Empty(_Leads.CurrentAction)) {
<input type="hidden" name="action" id="action" value="">
}
</form><!-- /.ew-list-form -->
@{ _Leads_List.CloseRecordset(); }
@if (!_Leads_List.IsExport()) {
<div class="card-footer ew-grid-lower-panel">
@if (!_Leads_List.IsGridAdd) {
<form name="ew-pager-form" class="form-inline ew-form ew-pager-form" action="@AppPath(CurrentPageName())">
@Html.Raw(_Leads_List.Pager.Render())
</form>
}
<div class="ew-list-other-options">
@_Leads_List.OtherOptions.RenderBody("bottom")
</div>
<div class="clearfix"></div>
</div>
}
</div><!-- /.ew-grid -->
}
@if (_Leads_List.TotalRecords <= 0 && Empty(_Leads.CurrentAction)) { // Show other options
<div class="ew-list-other-options">
@_Leads_List.OtherOptions.ForEach(opt => opt.ButtonClass = "").RenderBody()
</div>
<div class="clearfix"></div>
}
@_Leads_List.ShowPageFooter()
@ShowDebugMessage()
@ElapsedTime()
@if (!_Leads_List.IsExport()) {
<script>
loadjs.ready("load", function() {

	// Startup script
	// Write your table-specific startup script here
	// document.write("page loaded");

});
</script>
}