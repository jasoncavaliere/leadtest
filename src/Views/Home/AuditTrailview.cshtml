@{

	// View
	View = this;
	SetClientVar("login", LoginStatus);

	// Global Page Rendering event
	Page_Rendering();

	// Page Render event
	AuditTrail_View.Page_Render();

	// Check action result
	if (AuditTrail_View.ActionResult is EmptyResult) { // Terminate page
		return;
	}

	// Layout
	Layout = "_Layout";

	// Local variables (Temp data)
	#pragma warning disable 168
	string sqlWrk, filterWrk, whereWrk, curVal;
	List<Dictionary<string, object>> rswrk;
	string[] arWrk;
	List<object> listWrk;
	Func<string> lookupFilter;
	#pragma warning restore 168
}
@if (!AuditTrail_View.IsExport()) {
<script>
var fAuditTrailview, currentPageID;
loadjs.ready("head", function() {

	// Form object
	currentPageID = ew.PAGE_ID = "view";
	fAuditTrailview = currentForm = new ew.Form("fAuditTrailview", "view");
	loadjs.done("fAuditTrailview");
});
</script>
<script>
loadjs.ready("head", function() {

	// Client script
	// Write your client script here, no need to add script tags.

});
</script>
}
@if (!AuditTrail_View.IsExport()) {
<div class="btn-toolbar ew-toolbar">
	@AuditTrail_View.ExportOptions.RenderBody()
	@AuditTrail_View.OtherOptions.RenderBody()
	<div class="clearfix"></div>
</div>
}
@AuditTrail_View.ShowPageHeader()
@AuditTrail_View.ShowMessages()
<form name="fAuditTrailview" id="fAuditTrailview" class="form-inline ew-form ew-view-form" method="post">
@if (AuditTrail_View.CheckToken) {
	@Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(AuditTrail_View.IsModal)">
<table class="table table-striped table-sm ew-view-table">
@if (AuditTrail_View.Id.Visible) { // AuditTrail_View.Id.Visible (begin)
	<tr id="r_Id">
		<td class="@(AuditTrail_View.TableLeftColumnClass)"><span id="elh_AuditTrail_Id">@Html.Raw(AuditTrail_View.Id.Caption)</span></td>
		<td data-name="Id" @Html.Raw(AuditTrail_View.Id.CellAttributes)>
<span id="el_AuditTrail_Id">
<span @Html.Raw(AuditTrail_View.Id.ViewAttributes)>@Html.Raw(AuditTrail_View.Id.GetViewValue())</span>
</span>
</td>
	</tr>
} @* AuditTrail_View.Id.Visible (end) *@
@if (AuditTrail_View._DateTime.Visible) { // AuditTrail_View._DateTime.Visible (begin)
	<tr id="r__DateTime">
		<td class="@(AuditTrail_View.TableLeftColumnClass)"><span id="elh_AuditTrail__DateTime">@Html.Raw(AuditTrail_View._DateTime.Caption)</span></td>
		<td data-name="_DateTime" @Html.Raw(AuditTrail_View._DateTime.CellAttributes)>
<span id="el_AuditTrail__DateTime">
<span @Html.Raw(AuditTrail_View._DateTime.ViewAttributes)>@Html.Raw(AuditTrail_View._DateTime.GetViewValue())</span>
</span>
</td>
	</tr>
} @* AuditTrail_View._DateTime.Visible (end) *@
@if (AuditTrail_View.Script.Visible) { // AuditTrail_View.Script.Visible (begin)
	<tr id="r_Script">
		<td class="@(AuditTrail_View.TableLeftColumnClass)"><span id="elh_AuditTrail_Script">@Html.Raw(AuditTrail_View.Script.Caption)</span></td>
		<td data-name="Script" @Html.Raw(AuditTrail_View.Script.CellAttributes)>
<span id="el_AuditTrail_Script">
<span @Html.Raw(AuditTrail_View.Script.ViewAttributes)>@Html.Raw(AuditTrail_View.Script.GetViewValue())</span>
</span>
</td>
	</tr>
} @* AuditTrail_View.Script.Visible (end) *@
@if (AuditTrail_View._User.Visible) { // AuditTrail_View._User.Visible (begin)
	<tr id="r__User">
		<td class="@(AuditTrail_View.TableLeftColumnClass)"><span id="elh_AuditTrail__User">@Html.Raw(AuditTrail_View._User.Caption)</span></td>
		<td data-name="_User" @Html.Raw(AuditTrail_View._User.CellAttributes)>
<span id="el_AuditTrail__User">
<span @Html.Raw(AuditTrail_View._User.ViewAttributes)>@Html.Raw(AuditTrail_View._User.GetViewValue())</span>
</span>
</td>
	</tr>
} @* AuditTrail_View._User.Visible (end) *@
@if (AuditTrail_View.Action.Visible) { // AuditTrail_View.Action.Visible (begin)
	<tr id="r_Action">
		<td class="@(AuditTrail_View.TableLeftColumnClass)"><span id="elh_AuditTrail_Action">@Html.Raw(AuditTrail_View.Action.Caption)</span></td>
		<td data-name="Action" @Html.Raw(AuditTrail_View.Action.CellAttributes)>
<span id="el_AuditTrail_Action">
<span @Html.Raw(AuditTrail_View.Action.ViewAttributes)>@Html.Raw(AuditTrail_View.Action.GetViewValue())</span>
</span>
</td>
	</tr>
} @* AuditTrail_View.Action.Visible (end) *@
@if (AuditTrail_View._Table.Visible) { // AuditTrail_View._Table.Visible (begin)
	<tr id="r__Table">
		<td class="@(AuditTrail_View.TableLeftColumnClass)"><span id="elh_AuditTrail__Table">@Html.Raw(AuditTrail_View._Table.Caption)</span></td>
		<td data-name="_Table" @Html.Raw(AuditTrail_View._Table.CellAttributes)>
<span id="el_AuditTrail__Table">
<span @Html.Raw(AuditTrail_View._Table.ViewAttributes)>@Html.Raw(AuditTrail_View._Table.GetViewValue())</span>
</span>
</td>
	</tr>
} @* AuditTrail_View._Table.Visible (end) *@
@if (AuditTrail_View._Field.Visible) { // AuditTrail_View._Field.Visible (begin)
	<tr id="r__Field">
		<td class="@(AuditTrail_View.TableLeftColumnClass)"><span id="elh_AuditTrail__Field">@Html.Raw(AuditTrail_View._Field.Caption)</span></td>
		<td data-name="_Field" @Html.Raw(AuditTrail_View._Field.CellAttributes)>
<span id="el_AuditTrail__Field">
<span @Html.Raw(AuditTrail_View._Field.ViewAttributes)>@Html.Raw(AuditTrail_View._Field.GetViewValue())</span>
</span>
</td>
	</tr>
} @* AuditTrail_View._Field.Visible (end) *@
@if (AuditTrail_View.KeyValue.Visible) { // AuditTrail_View.KeyValue.Visible (begin)
	<tr id="r_KeyValue">
		<td class="@(AuditTrail_View.TableLeftColumnClass)"><span id="elh_AuditTrail_KeyValue">@Html.Raw(AuditTrail_View.KeyValue.Caption)</span></td>
		<td data-name="KeyValue" @Html.Raw(AuditTrail_View.KeyValue.CellAttributes)>
<span id="el_AuditTrail_KeyValue">
<span @Html.Raw(AuditTrail_View.KeyValue.ViewAttributes)>@Html.Raw(AuditTrail_View.KeyValue.GetViewValue())</span>
</span>
</td>
	</tr>
} @* AuditTrail_View.KeyValue.Visible (end) *@
@if (AuditTrail_View.OldValue.Visible) { // AuditTrail_View.OldValue.Visible (begin)
	<tr id="r_OldValue">
		<td class="@(AuditTrail_View.TableLeftColumnClass)"><span id="elh_AuditTrail_OldValue">@Html.Raw(AuditTrail_View.OldValue.Caption)</span></td>
		<td data-name="OldValue" @Html.Raw(AuditTrail_View.OldValue.CellAttributes)>
<span id="el_AuditTrail_OldValue">
<span @Html.Raw(AuditTrail_View.OldValue.ViewAttributes)>@Html.Raw(AuditTrail_View.OldValue.GetViewValue())</span>
</span>
</td>
	</tr>
} @* AuditTrail_View.OldValue.Visible (end) *@
@if (AuditTrail_View.NewValue.Visible) { // AuditTrail_View.NewValue.Visible (begin)
	<tr id="r_NewValue">
		<td class="@(AuditTrail_View.TableLeftColumnClass)"><span id="elh_AuditTrail_NewValue">@Html.Raw(AuditTrail_View.NewValue.Caption)</span></td>
		<td data-name="NewValue" @Html.Raw(AuditTrail_View.NewValue.CellAttributes)>
<span id="el_AuditTrail_NewValue">
<span @Html.Raw(AuditTrail_View.NewValue.ViewAttributes)>@Html.Raw(AuditTrail_View.NewValue.GetViewValue())</span>
</span>
</td>
	</tr>
} @* AuditTrail_View.NewValue.Visible (end) *@
</table>
@{ AuditTrail_View.CloseRecordset(); }
</form>
@AuditTrail_View.ShowPageFooter()
@ShowDebugMessage()
@ElapsedTime()
@if (!AuditTrail_View.IsExport()) {
<script>
loadjs.ready("load", function() {

	// Startup script
	// Write your table-specific startup script here
	// document.write("page loaded");

});
</script>
}